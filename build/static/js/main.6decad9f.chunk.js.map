{"version":3,"sources":["components/Button/Icons/Icon.module.css","components/Timer/Timer.module.css","components/Button/Button.module.css","components/Htag/Htag.module.css","components/Input/Input.module.css","components/Modal/Modal.module.css","components/App/App.tsx","components/ErrorBoundry/ErrorBoundry.tsx","components/ErrorIndicator/ErrorIndicator.tsx","constants/timer.ts","actions/timer.ts","constants/modal.ts","hooks/useInterval.js","utils/formatTime.ts","components/Timer/Timer.tsx","actions/modal.ts","components/Input/Input.tsx","components/Button/Icons/SettingsIcon.tsx","components/Button/Icons/DoneIcon.tsx","components/Button/Button.tsx","components/ProgressBar/ProgressBar.tsx","components/P/P.tsx","components/Portal/Portal.tsx","components/Modal/Modal.tsx","reducers/timer.ts","reducers/modal.ts","reducers/index.ts","store.ts","index.tsx","components/ProgressBar/ProgressBar.module.css","components/P/P.module.css"],"names":["module","exports","App","ErrorBoundry","state","hasError","error","this","setState","props","children","Component","ErrorIndicator","className","Timer","STARTED","PAUSED","CHANGED","SETED","FINISHED","timerPaused","type","Modal","OPENED","CLOSED","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","formatTime","time","length","useState","minutes","seconds","initialTime","setInitialTime","setMinutes","setSeconds","useSelector","timer","started","isConfigured","isFinished","isOpen","modal","dispatch","useDispatch","startOrPause","formatTimer","done","percents","Math","floor","getPropgess","changeHandler","evt","target","max","value","cn","styles","wrapper","container","onChange","onClick","appearance","onClose","setTime","Input","edited","input","edit","min","readOnly","maxLength","SettingsIcon","icon","width","height","viewBox","fill","xmlns","d","DoneIcon","Button","button","default","settings","ProgressBar","point1","x","y","point2","style","clipPath","progressBar","indicator","inProcess","finished","P","size","p","s","m","l","Portal","el","document","createElement","body","appendChild","removeChild","ReactDOM","createPortal","overlay","initialState","timerReducer","action","modalReducer","rootReducer","combineReducers","store","createStore","render","getElementById"],"mappings":"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","file":"static/js/main.6decad9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Icon_icon__JZXkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Timer_wrapper__smmhZ\",\"container\":\"Timer_container___vadi\",\"timer\":\"Timer_timer__2pUK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ft6y\",\"default\":\"Button_default__3KpyZ\",\"settings\":\"Button_settings__1rVfb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Htag_h1__34uoC\",\"h2\":\"Htag_h2__1BIvE\",\"h3\":\"Htag_h3__1Vepl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2QDHM\",\"edit\":\"Input_edit__1OLZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1GjAX\",\"modal\":\"Modal_modal__3Axg9\",\"heading\":\"Modal_heading__2VKKw\",\"text\":\"Modal_text__141oo\",\"form\":\"Modal_form__ldwWQ\"};","import { Timer } from '..';\r\n\r\nconst App = (): JSX.Element => <Timer />;\r\n\r\nexport default App;","import { Component } from 'react';\r\nimport { ErrorIndicator } from '..';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n    error: ''\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator error={this.state.error} />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { ErrorIndicatorProps } from './ErrorIndicator.props';\r\n\r\nconst ErrorIndicator = ({ error }: ErrorIndicatorProps): JSX.Element => {\r\n  return (\r\n    <div className=\"error\">\r\n      <p className=\"error__text\">{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import { TimerActionsModel } from '../interfaces/timerActionsModel';\r\n\r\nconst Timer: TimerActionsModel = {\r\n    STARTED: \"TIMER_STARTED\",\r\n    PAUSED: \"TIMER_PAUSED\",\r\n    CHANGED: \"TIMER_CHANGED\",\r\n    SETED: \"TIMER_SETED\",\r\n    FINISHED: \"TIMER_FINISHED\",\r\n}\r\n\r\nexport default Timer;","import Timer from '../constants/timer';\r\n\r\nexport const timerStarted = () => {\r\n    return {\r\n        type: Timer.STARTED,\r\n    };\r\n};\r\n\r\nexport const timerPaused = () => {\r\n    return {\r\n        type: Timer.PAUSED,\r\n    };\r\n};\r\n\r\nexport const timerChanged = () => {\r\n    return {\r\n        type: Timer.CHANGED,\r\n    };\r\n};\r\n\r\nexport const timerSeted = () => {\r\n    return {\r\n        type: Timer.SETED,\r\n    };\r\n};\r\n\r\nexport const timerFinished = () => {\r\n    return {\r\n        type: Timer.FINISHED,\r\n    };\r\n};","import { ModalActionsModel } from '../interfaces/modalActionsModel';\r\n\r\nconst Modal: ModalActionsModel = {\r\n    OPENED: \"MODAL_OPENED\",\r\n    CLOSED: \"MODAL_CLOSED\",\r\n}\r\n\r\nexport default Modal;\r\n\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","const formatTime = (time: string): string => {\r\n    return time.length < 1 ? `00` : time.length < 2 ? `0${time}` : time;\r\n};\r\n\r\nexport default formatTime;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../reducers';\r\nimport { Input, Button } from '..';\r\nimport { timerPaused, timerStarted, timerChanged, timerSeted, timerFinished, modalOpened } from '../../actions';\r\nimport { useState } from 'react';\r\nimport { useInterval } from '../../hooks';\r\nimport { InputEvtProps } from '../../interfaces/inputEvtProps';\r\nimport styles from './Timer.module.css'\r\nimport cn from 'classnames'\r\nimport { ProgressBar, Modal } from '..';\r\nimport { formatTime } from '../../utils';\r\n\r\nconst Timer = (): JSX.Element => {\r\n    const INITIAL_MINUTES: string = '0'\r\n    const INITIAL_SECONDS: string = '3'\r\n    const INTERVAL: number = 1000;\r\n\r\n    const [initialTime, setInitialTime] = useState({\r\n        minutes: INITIAL_MINUTES,\r\n        seconds: INITIAL_SECONDS\r\n    })\r\n\r\n    const [minutes, setMinutes] = useState(formatTime(initialTime.minutes))\r\n    const [seconds, setSeconds] = useState(formatTime(initialTime.seconds))\r\n\r\n    let { started, isConfigured, isFinished } = useSelector((state: RootState) => state.timer)\r\n    const isOpen = useSelector((state: RootState) => state.modal.isOpen);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let startOrPause = started ? 'Stop' : 'Start';\r\n\r\n    const reduceSeconds = () => setSeconds(seconds => +seconds - 1 + '');\r\n    const reduceMinutes = () => setMinutes(minutes => +minutes - 1 + '');\r\n\r\n    const formatTimer = () => {\r\n        setMinutes(minutes => formatTime(minutes))\r\n        setSeconds(seconds => formatTime(seconds))\r\n    }\r\n\r\n    // Вынести в хелпер\r\n    const getPropgess = () => {\r\n        const initialTimeInSeconds = +initialTime.minutes * 60 + +initialTime.seconds\r\n        const currentTimeInSeconds = +minutes * 60 + +seconds;\r\n        const percents = 100 / initialTimeInSeconds * currentTimeInSeconds;\r\n        return 100 - Math.floor(percents);\r\n    }\r\n    // Вынести в хелпер конец\r\n\r\n    const done = getPropgess();\r\n\r\n    const setTime = (minutes: string, seconds: string) => {\r\n        setMinutes(minutes)\r\n        setSeconds(seconds)\r\n    }\r\n\r\n    const onModalClose = () => {\r\n        setTime(initialTime.minutes, initialTime.seconds)\r\n        formatTimer();\r\n        dispatch(timerPaused())\r\n    }\r\n\r\n    const processTimer = () => {\r\n        if (started) {\r\n            if (+seconds === 0 && +minutes !== 0) {\r\n                setSeconds('59');\r\n                reduceMinutes();\r\n                setMinutes(minutes => formatTime(minutes))\r\n            } else if (+seconds === 0 && +minutes === 0) {\r\n                dispatch(timerFinished())\r\n                dispatch(modalOpened())\r\n            } else {\r\n                reduceSeconds();\r\n                setSeconds(seconds => formatTime(seconds))\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(processTimer, INTERVAL)\r\n\r\n    const changeTimer = () => {\r\n        if (isConfigured) {\r\n            dispatch(timerSeted())\r\n            formatTimer();\r\n        } else {\r\n            dispatch(timerChanged())\r\n        }\r\n    }\r\n\r\n    const switchTimer = () => {\r\n        if (started) {\r\n            dispatch(timerPaused())\r\n        } else {\r\n            dispatch(timerStarted())\r\n            formatTimer();\r\n        }\r\n    }\r\n\r\n    const changeHandler = (evt: InputEvtProps) => {\r\n        if (evt.target.max === \"60\") {\r\n            setSeconds('')\r\n            setSeconds(evt.target.value)\r\n            setInitialTime({\r\n                minutes: minutes,\r\n                seconds: evt.target.value\r\n            })\r\n        } else if (evt.target.max === \"99\") {\r\n            setMinutes('')\r\n            setMinutes(evt.target.value)\r\n            setInitialTime({\r\n                minutes: evt.target.value,\r\n                seconds: seconds\r\n            })\r\n        }\r\n    }\r\n\r\n    // const validateValue = (evt: InputEvtProps) => {\r\n    //     if (evt.target.value.length > 3) {\r\n    //         const arr = evt.target.value.split('')\r\n    //         arr[0] = arr[1]\r\n    //         arr[1] = arr[2]\r\n    //         arr.pop()\r\n    //         evt.target.value = arr.join()\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div className={cn(styles.wrapper)}>\r\n                <ProgressBar done={done} isFinished={isFinished} isConfigured={isConfigured} />\r\n\r\n                <div className={cn(styles.container)}>\r\n                    <div className={cn(styles.timer)}>\r\n                        <Input type=\"minutes\" value={minutes} onChange={changeHandler} isConfigured={isConfigured} />\r\n                        :\r\n                        <Input type=\"seconds\" value={seconds} onChange={changeHandler} isConfigured={isConfigured} />\r\n                    </div>\r\n                    {!isConfigured &&\r\n                        < Button onClick={switchTimer} data-testid=\"button-start-toggle\">{startOrPause}</Button>\r\n                    }\r\n                    <Button appearance=\"settings\" onClick={changeTimer} isConfigured={isConfigured} data-testid=\"settings-button\">Settings</Button>\r\n                </div>\r\n\r\n                {isOpen && <Modal onClose={onModalClose} />}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Timer;","import Modal from '../constants/modal';\r\n\r\nexport const modalOpened = () => {\r\n  return {\r\n    type: Modal.OPENED,\r\n  };\r\n};\r\n\r\nexport const modalClosed = () => {\r\n  return {\r\n    type: Modal.CLOSED\r\n  };\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { InputProps } from './Input.props';\r\nimport { RootState } from '../../reducers';\r\nimport styles from './Input.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Input = ({ type, value, isConfigured, ...props }: InputProps): JSX.Element => {\r\n    let edited = useSelector((state: RootState) => state.timer.isConfigured)\r\n\r\n    let max = type === 'minutes' ? 99 : 60;\r\n\r\n    return (\r\n        <input className={cn(styles.input, {\r\n            [styles.edit]: isConfigured,\r\n        })} type=\"number\" min={0} max={max} readOnly={!edited} value={value} {...props} maxLength={2} />\r\n    )\r\n}\r\n\r\nexport default Input;","import styles from './Icon.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst SettingsIcon = () => {\r\n    return (\r\n        <svg className={cn(styles.icon)} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#585858\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M24 14V10H19.714C19.526 9.274 19.238 8.592 18.866 7.962L21.898 4.93L19.07 2.1L16.04 5.132C15.406 4.76 14.726 4.472 14 4.284V0H10V4.284C9.274 4.474 8.594 4.76 7.96 5.134L4.93 2.1L2.102 4.928L5.132 7.96C4.762 8.592 4.472 9.272 4.286 10H0V14H4.286C4.474 14.726 4.762 15.408 5.134 16.038L2.102 19.072L4.93 21.9L7.962 18.868C8.594 19.24 9.274 19.528 10.002 19.718V24H14.002V19.716C14.728 19.526 15.408 19.238 16.042 18.866L19.074 21.898L21.902 19.07L18.87 16.036C19.242 15.406 19.53 14.726 19.718 13.998H24V14ZM12 16C9.792 16 8 14.206 8 12C8 9.796 9.792 8 12 8C14.208 8 16 9.796 16 12C16 14.204 14.208 16 12 16Z\" />\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport default SettingsIcon","import styles from './Icon.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst DoneIcon = () => {\r\n    return (\r\n        <svg className={cn(styles.icon)} width=\"27\" height=\"24\" viewBox=\"0 0 27 24\" fill=\"#585858\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.74773 24L0 15.2523L3.10636 12.1442L8.4225 17.4603L22.7061 0L26.1078 2.78465L8.74773 24Z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default DoneIcon\r\n\r\n\r\n","import { ButtonProps } from './Button.props';\r\nimport { SettingsIcon, DoneIcon } from './Icons';\r\nimport styles from './Button.module.css';\r\nimport cn from 'classnames';\r\n\r\nexport const Button = ({ appearance = 'default', isConfigured, children, className, ...props }: ButtonProps): JSX.Element => {\r\n    return (\r\n        <button className={cn(styles.button, className, {\r\n            [styles.default]: appearance === 'default',\r\n            [styles.settings]: appearance === 'settings',\r\n        })}\r\n            {...props}>\r\n            {children}\r\n            {appearance === 'settings' && (isConfigured ? <DoneIcon data-testid=\"done-icon\" /> : <SettingsIcon data-testid=\"settings-icon\" />)}\r\n        </button >\r\n    )\r\n};","import { ProgressBarProps } from './ProgressBar.props';\r\nimport styles from './ProgressBar.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst ProgressBar = ({ done, isFinished, isConfigured }: ProgressBarProps): JSX.Element => {\r\n    let point1 = {\r\n        x: 0,\r\n        y: 100\r\n    }\r\n\r\n    if (done > 0 && done < 25) {\r\n        point1.x = done * 4\r\n        point1.y = 100\r\n    } else if (done >= 25 && done <= 50) {\r\n        point1.x = 100\r\n        point1.y = 100 - (done - 25) * 4\r\n    } else if (done > 50 && done < 75) {\r\n        point1.x = 100 - (done - 50) * 4\r\n        point1.y = 0\r\n    } else if (done >= 75 && done <= 100) {\r\n        point1.x = 0\r\n        point1.y = (done - 75) * 4\r\n    } else {\r\n        point1.x = 0\r\n        point1.y = 100\r\n    }\r\n\r\n    let point2 = {\r\n        x: 100,\r\n        y: 100,\r\n    }\r\n\r\n    if (done >= 50 && done <= 100) {\r\n        point2.x = 0\r\n        point2.y = 0\r\n    } else {\r\n        point2.x = 100\r\n        point2.y = 100\r\n    }\r\n\r\n    if (isConfigured) {\r\n        point1.x = 0\r\n        point1.y = 100\r\n        point2.x = 0\r\n        point2.y = 0\r\n    }\r\n\r\n    const style = {\r\n        clipPath: `polygon(100% 0, 100% 100%, 0 100%, 50% 50%, ${point1.x}% ${point1.y}%, ${point2.x}% ${point2.y}%)`\r\n    }\r\n\r\n    return (\r\n        <div className={cn(styles.wrapper)}>\r\n            <div className={cn(styles.progressBar)} >\r\n                <div style={style} className={cn(styles.indicator, {\r\n                    [styles.inProcess]: !isFinished,\r\n                    [styles.finished]: isFinished || isConfigured\r\n                })} >\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import { PProps } from './P.props';\r\nimport styles from './P.module.css';\r\nimport cn from 'classnames';\r\n\r\nexport const P = ({ size = 'm', children, className, ...props }: PProps): JSX.Element => {\r\n    return (\r\n        <p className={cn(styles.p, className, {\r\n            [styles.s]: size === 's',\r\n            [styles.m]: size === 'm',\r\n            [styles.l]: size === 'l',\r\n        })} {...props}>\r\n            {children}\r\n        </p >\r\n    )\r\n};","import { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class Portal extends Component {\r\n  el = document.createElement('div');\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport Portal from '../Portal/Portal';\r\nimport { Button } from '../';\r\nimport { modalClosed } from '../../actions';\r\nimport { P } from '../';\r\nimport styles from './Modal.module.css'\r\nimport cn from 'classnames'\r\n\r\ninterface onCloseProps {\r\n  onClose: () => void\r\n}\r\n\r\nconst Modal = ({ onClose }: onCloseProps): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const dispatchModalClosed = () => {\r\n    dispatch(modalClosed());\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <div className={cn(styles.overlay)}>\r\n        <div className={cn(styles.modal)}>\r\n\r\n          {/* Вынести в копонент */}\r\n          <P size={'l'}>\r\n            Time is up\r\n          </P>\r\n\r\n          <Button\r\n            className=\"form__button button\"\r\n            onClick={dispatchModalClosed}\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Timer from '../constants/timer';\r\nimport { ActionModel } from '../interfaces/actionModel';\r\nimport { TimerStateModel } from '../interfaces/TimerStateModel';\r\n\r\nconst initialState: TimerStateModel = {\r\n  started: false,\r\n  isConfigured: false,\r\n  isFinished: false,\r\n};\r\n\r\nconst timerReducer = (state = initialState, action: ActionModel) => {\r\n  switch (action.type) {\r\n    case Timer.STARTED:\r\n      return {\r\n        started: true,\r\n        isConfigured: false,\r\n        isFinished: false,\r\n      };\r\n    case Timer.PAUSED:\r\n      return {\r\n        started: false,\r\n        isConfigured: false,\r\n        isFinished: false,\r\n      };\r\n    case Timer.CHANGED:\r\n      return {\r\n        started: false,\r\n        isConfigured: true,\r\n        isFinished: false,\r\n      };\r\n    case Timer.SETED:\r\n      return {\r\n        started: false,\r\n        isConfigured: false,\r\n        isFinished: false,\r\n      };\r\n    case Timer.FINISHED:\r\n      return {\r\n        started: false,\r\n        isConfigured: false,\r\n        isFinished: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n","import { ActionModel } from '../interfaces/actionModel';\r\nimport Modal from '../constants/modal';\r\nimport { ModalStateModel } from '../interfaces/ModalStateModel';\r\n\r\nconst initialState: ModalStateModel = {\r\n  isOpen: false,\r\n};\r\n\r\nconst modalReducer = (state = initialState, action: ActionModel) => {\r\n  switch (action.type) {\r\n    case Modal.OPENED:\r\n      return {\r\n        isOpen: true,\r\n      };\r\n    case Modal.CLOSED:\r\n      return {\r\n        isOpen: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { TimerStateModel } from '../interfaces/TimerStateModel';\r\nimport { ModalStateModel } from '../interfaces/ModalStateModel';\r\nimport timerReducer from './timer';\r\nimport modalReducer from './modal';\r\n\r\nexport const rootReducer = combineReducers({ timer: timerReducer, modal: modalReducer });\r\n\r\nexport interface RootState {\r\n    timer: TimerStateModel\r\n    modal: ModalStateModel\r\n}\r\n","import { createStore } from 'redux';\r\n\r\nimport { rootReducer } from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { App } from './components';\r\nimport { ErrorBoundry } from './components';\r\n\r\nimport store from './store';\r\n\r\nimport \"./assets/styles/styles.css\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <App />\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProgressBar_wrapper__35vyV\",\"progressBar\":\"ProgressBar_progressBar__2X7bl\",\"indicator\":\"ProgressBar_indicator__ZizSx\",\"inProcess\":\"ProgressBar_inProcess__2dLDi\",\"finished\":\"ProgressBar_finished__zSJ0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"P_p__FNgQN\",\"s\":\"P_s__1AJaz\",\"m\":\"P_m__3OHh9\",\"l\":\"P_l__1_X30\"};"],"sourceRoot":""}